// RockSamplePOMDP{2}   map_size: Tuple{Int64, Int64}   rocks_positions: StaticArraysCore.SVector{2, StaticArraysCore.SVector{2, Int64}}   init_pos: StaticArraysCore.SVector{2, Int64}   sensor_efficiency: Float64 20.0   bad_rock_penalty: Float64 -10.0   good_rock_reward: Float64 10.0   step_penalty: Float64 0.0   sensor_use_penalty: Float64 0.0   exit_reward: Float64 10.0   terminal_state: RSState{2}   indices: Array{Int64}((3,)) [2, 4, 8]   discount_factor: Float64 0.95  
 dtmc 

//Parameters 
const double p1; 
const double p2; 
const double p3; 
const double p4; 
const double p5; 
const double p6; 
const double p7; 
const double p8; 
const double p9; 
const double p10; 
const double p11; 
const double p12; 
const double p13; 
const double p14; 
const double p15; 
const double p16; 
const double p17; 
const double p18; 
const double p19; 
const double p20; 
const double p21; 
const double p22; 
const double p23; 
const double p24; 

//Transitions 
module pomdp_mc 
	 s: [0..153] init 0; 
	 [] s=0 ->  0.25: (s'=1)+ 0.25: (s'=37)+ 0.25: (s'=73)+ 0.25: (s'=109);
	 [] s=1 ->  1.0*(1.0): (s'=3);
	 [] s=2 ->  1.0*(1.0): (s'=3);
	 [] s=3 ->  1.0*(1.0): (s'=13);
	 [] s=4 ->  1.0*p13: (s'=5)+ 1.0*(1.0-p13): (s'=9);
	 [] s=5 ->  1.0*(1.0): (s'=24);
	 [] s=6 ->  1.0*(1.0): (s'=7);
	 [] s=7 ->  1.0*(1.0): (s'=17);
	 [] s=8 ->  1.0*(1.0): (s'=17);
	 [] s=9 ->  1.0*(1.0): (s'=17);
	 [] s=10 ->  1.0*p1: (s'=11)+ 1.0*(1.0-p1): (s'=12);
	 [] s=11 ->  1.0*(1.0): (s'=12);
	 [] s=12 ->  1.0*(1.0): (s'=148);
	 [] s=13 ->  1.0*p14: (s'=14)+ 1.0*(1.0-p14): (s'=18);
	 [] s=14 ->  1.0*(1.0): (s'=33);
	 [] s=15 ->  1.0*(1.0): (s'=16);
	 [] s=16 ->  1.0*(1.0): (s'=152);
	 [] s=17 ->  1.0*(1.0): (s'=152);
	 [] s=18 ->  1.0*(1.0): (s'=152);
	 [] s=19 ->  1.0*p2: (s'=20)+ 1.0*(1.0-p2): (s'=21);
	 [] s=20 ->  1.0*(1.0): (s'=21);
	 [] s=21 ->  1.0*(1.0): (s'=31);
	 [] s=22 ->  1.0*p15: (s'=23)+ 1.0*(1.0-p15): (s'=27);
	 [] s=23 ->  1.0*(1.0): (s'=24);
	 [] s=24 ->  1.0*(1.0): (s'=25);
	 [] s=25 ->  1.0*(1.0): (s'=35);
	 [] s=26 ->  1.0*(1.0): (s'=35);
	 [] s=27 ->  1.0*(1.0): (s'=35);
	 [] s=28 ->  1.0*p3: (s'=29)+ 1.0*(1.0-p3): (s'=30);
	 [] s=29 ->  1.0*(1.0): (s'=30);
	 [] s=30 ->  1.0*(1.0): (s'=148);
	 [] s=31 ->  1.0*(1.0): (s'=36);
	 [] s=32 ->  1.0*(1.0): (s'=33);
	 [] s=33 ->  1.0*(1.0): (s'=34);
	 [] s=34 ->  1.0*(1.0): (s'=152);
	 [] s=35 ->  1.0*(1.0): (s'=152);
	 [] s=36 ->  1.0*(1.0): (s'=152);
	 [] s=37 ->  1.0*(1.0): (s'=38);
	 [] s=38 ->  1.0*(1.0): (s'=3);
	 [] s=39 ->  1.0*(1.0): (s'=49);
	 [] s=40 ->  1.0*p16: (s'=41)+ 1.0*(1.0-p16): (s'=45);
	 [] s=41 ->  1.0*(1.0): (s'=60);
	 [] s=42 ->  1.0*(1.0): (s'=7);
	 [] s=43 ->  1.0*(1.0): (s'=53);
	 [] s=44 ->  1.0*(1.0): (s'=53);
	 [] s=45 ->  1.0*(1.0): (s'=53);
	 [] s=46 ->  1.0*p4: (s'=47)+ 1.0*(1.0-p4): (s'=48);
	 [] s=47 ->  1.0*(1.0): (s'=48);
	 [] s=48 ->  1.0*(1.0): (s'=148);
	 [] s=49 ->  1.0*p17: (s'=50)+ 1.0*(1.0-p17): (s'=54);
	 [] s=50 ->  1.0*(1.0): (s'=69);
	 [] s=51 ->  1.0*(1.0): (s'=52);
	 [] s=52 ->  1.0*(1.0): (s'=152);
	 [] s=53 ->  1.0*(1.0): (s'=152);
	 [] s=54 ->  1.0*(1.0): (s'=152);
	 [] s=55 ->  1.0*p5: (s'=56)+ 1.0*(1.0-p5): (s'=57);
	 [] s=56 ->  1.0*(1.0): (s'=57);
	 [] s=57 ->  1.0*(1.0): (s'=67);
	 [] s=58 ->  1.0*p18: (s'=59)+ 1.0*(1.0-p18): (s'=63);
	 [] s=59 ->  1.0*(1.0): (s'=60);
	 [] s=60 ->  1.0*(1.0): (s'=61);
	 [] s=61 ->  1.0*(1.0): (s'=71);
	 [] s=62 ->  1.0*(1.0): (s'=71);
	 [] s=63 ->  1.0*(1.0): (s'=71);
	 [] s=64 ->  1.0*p6: (s'=65)+ 1.0*(1.0-p6): (s'=66);
	 [] s=65 ->  1.0*(1.0): (s'=66);
	 [] s=66 ->  1.0*(1.0): (s'=148);
	 [] s=67 ->  1.0*(1.0): (s'=72);
	 [] s=68 ->  1.0*(1.0): (s'=69);
	 [] s=69 ->  1.0*(1.0): (s'=70);
	 [] s=70 ->  1.0*(1.0): (s'=152);
	 [] s=71 ->  1.0*(1.0): (s'=152);
	 [] s=72 ->  1.0*(1.0): (s'=152);
	 [] s=73 ->  1.0*(1.0): (s'=75);
	 [] s=74 ->  1.0*(1.0): (s'=75);
	 [] s=75 ->  1.0*(1.0): (s'=85);
	 [] s=76 ->  1.0*p19: (s'=77)+ 1.0*(1.0-p19): (s'=81);
	 [] s=77 ->  1.0*(1.0): (s'=96);
	 [] s=78 ->  1.0*(1.0): (s'=79);
	 [] s=79 ->  1.0*(1.0): (s'=89);
	 [] s=80 ->  1.0*(1.0): (s'=89);
	 [] s=81 ->  1.0*(1.0): (s'=89);
	 [] s=82 ->  1.0*p7: (s'=83)+ 1.0*(1.0-p7): (s'=84);
	 [] s=83 ->  1.0*(1.0): (s'=84);
	 [] s=84 ->  1.0*(1.0): (s'=148);
	 [] s=85 ->  1.0*p20: (s'=86)+ 1.0*(1.0-p20): (s'=90);
	 [] s=86 ->  1.0*(1.0): (s'=105);
	 [] s=87 ->  1.0*(1.0): (s'=88);
	 [] s=88 ->  1.0*(1.0): (s'=152);
	 [] s=89 ->  1.0*(1.0): (s'=152);
	 [] s=90 ->  1.0*(1.0): (s'=152);
	 [] s=91 ->  1.0*p8: (s'=92)+ 1.0*(1.0-p8): (s'=93);
	 [] s=92 ->  1.0*(1.0): (s'=93);
	 [] s=93 ->  1.0*(1.0): (s'=103);
	 [] s=94 ->  1.0*p21: (s'=95)+ 1.0*(1.0-p21): (s'=99);
	 [] s=95 ->  1.0*(1.0): (s'=96);
	 [] s=96 ->  1.0*(1.0): (s'=97);
	 [] s=97 ->  1.0*(1.0): (s'=107);
	 [] s=98 ->  1.0*(1.0): (s'=107);
	 [] s=99 ->  1.0*(1.0): (s'=107);
	 [] s=100 ->  1.0*p9: (s'=101)+ 1.0*(1.0-p9): (s'=102);
	 [] s=101 ->  1.0*(1.0): (s'=30);
	 [] s=102 ->  1.0*(1.0): (s'=148);
	 [] s=103 ->  1.0*(1.0): (s'=104);
	 [] s=104 ->  1.0*(1.0): (s'=105);
	 [] s=105 ->  1.0*(1.0): (s'=34);
	 [] s=106 ->  1.0*(1.0): (s'=152);
	 [] s=107 ->  1.0*(1.0): (s'=152);
	 [] s=108 ->  1.0*(1.0): (s'=152);
	 [] s=109 ->  1.0*(1.0): (s'=110);
	 [] s=110 ->  1.0*(1.0): (s'=75);
	 [] s=111 ->  1.0*(1.0): (s'=121);
	 [] s=112 ->  1.0*p22: (s'=113)+ 1.0*(1.0-p22): (s'=117);
	 [] s=113 ->  1.0*(1.0): (s'=132);
	 [] s=114 ->  1.0*(1.0): (s'=79);
	 [] s=115 ->  1.0*(1.0): (s'=125);
	 [] s=116 ->  1.0*(1.0): (s'=125);
	 [] s=117 ->  1.0*(1.0): (s'=125);
	 [] s=118 ->  1.0*p10: (s'=119)+ 1.0*(1.0-p10): (s'=120);
	 [] s=119 ->  1.0*(1.0): (s'=120);
	 [] s=120 ->  1.0*(1.0): (s'=148);
	 [] s=121 ->  1.0*p23: (s'=122)+ 1.0*(1.0-p23): (s'=126);
	 [] s=122 ->  1.0*(1.0): (s'=141);
	 [] s=123 ->  1.0*(1.0): (s'=124);
	 [] s=124 ->  1.0*(1.0): (s'=152);
	 [] s=125 ->  1.0*(1.0): (s'=152);
	 [] s=126 ->  1.0*(1.0): (s'=152);
	 [] s=127 ->  1.0*p11: (s'=128)+ 1.0*(1.0-p11): (s'=129);
	 [] s=128 ->  1.0*(1.0): (s'=129);
	 [] s=129 ->  1.0*(1.0): (s'=139);
	 [] s=130 ->  1.0*p24: (s'=131)+ 1.0*(1.0-p24): (s'=135);
	 [] s=131 ->  1.0*(1.0): (s'=132);
	 [] s=132 ->  1.0*(1.0): (s'=133);
	 [] s=133 ->  1.0*(1.0): (s'=143);
	 [] s=134 ->  1.0*(1.0): (s'=143);
	 [] s=135 ->  1.0*(1.0): (s'=143);
	 [] s=136 ->  1.0*p12: (s'=137)+ 1.0*(1.0-p12): (s'=138);
	 [] s=137 ->  1.0*(1.0): (s'=66);
	 [] s=138 ->  1.0*(1.0): (s'=148);
	 [] s=139 ->  1.0*(1.0): (s'=140);
	 [] s=140 ->  1.0*(1.0): (s'=141);
	 [] s=141 ->  1.0*(1.0): (s'=70);
	 [] s=142 ->  1.0*(1.0): (s'=152);
	 [] s=143 ->  1.0*(1.0): (s'=152);
	 [] s=144 ->  1.0*(1.0): (s'=152);
	 [] s=145 ->  1.0: (s'=145);
	 [] s=146 ->  1.0: (s'=146);
	 [] s=147 ->  1.0: (s'=147);
	 [] s=148 ->  1.0: (s'=148);
	 [] s=149 ->  1.0: (s'=149);
	 [] s=150 ->  1.0: (s'=150);
	 [] s=151 ->  1.0: (s'=151);
	 [] s=152 ->  1.0: (s'=152);
	 [] s=153 ->  1.0: (s'=153);
endmodule 

//Rewards 
rewards 
	 s=2 : -10.0;
	 s=6 : -10.0;
	 s=12 : 10.0;
	 s=16 : 10.0;
	 s=17 : 10.0;
	 s=18 : 10.0;
	 s=29 : -10.0;
	 s=30 : 10.0;
	 s=33 : -10.0;
	 s=34 : 10.0;
	 s=35 : 10.0;
	 s=36 : 10.0;
	 s=38 : 10.0;
	 s=42 : 10.0;
	 s=48 : 10.0;
	 s=52 : 10.0;
	 s=53 : 10.0;
	 s=54 : 10.0;
	 s=65 : -10.0;
	 s=66 : 10.0;
	 s=69 : -10.0;
	 s=70 : 10.0;
	 s=71 : 10.0;
	 s=72 : 10.0;
	 s=74 : -10.0;
	 s=78 : -10.0;
	 s=84 : 10.0;
	 s=88 : 10.0;
	 s=89 : 10.0;
	 s=90 : 10.0;
	 s=101 : 10.0;
	 s=102 : 10.0;
	 s=105 : 10.0;
	 s=106 : 10.0;
	 s=107 : 10.0;
	 s=108 : 10.0;
	 s=110 : 10.0;
	 s=114 : 10.0;
	 s=120 : 10.0;
	 s=124 : 10.0;
	 s=125 : 10.0;
	 s=126 : 10.0;
	 s=137 : 10.0;
	 s=138 : 10.0;
	 s=141 : 10.0;
	 s=142 : 10.0;
	 s=143 : 10.0;
	 s=144 : 10.0;
endrewards